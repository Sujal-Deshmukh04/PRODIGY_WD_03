JS CODE FOR TIC TAC TOE GAME
const board = document.getElementById('board');
const statusText = document.getElementById('status');
const resetBtn = document.getElementById('resetBtn');

let gameActive = true;
let gameState = ['', '', '', '', '', '', '', '', ''];
const humanPlayer = 'X';
const aiPlayer = 'O';

const winConditions = [
  [0,1,2], [3,4,5], [6,7,8],
  [0,3,6], [1,4,7], [2,5,8],
  [0,4,8], [2,4,6]
];

// Initialize board
for (let i = 0; i < 9; i++) {
  const cell = document.createElement('div');
  cell.classList.add('cell');
  cell.dataset.index = i;
  board.appendChild(cell);
}

const cells = document.querySelectorAll('.cell');

// Human player click
cells.forEach(cell => {
  cell.addEventListener('click', () => {
    const index = cell.dataset.index;
    if (gameState[index] === '' && gameActive) {
      makeMove(index, humanPlayer);
      if (gameActive) {
        setTimeout(aiTurn, 500); // AI responds after 0.5s
      }
    }
  });
});

function makeMove(index, player) {
  gameState[index] = player;
  cells[index].textContent = player;
  cells[index].style.cursor = 'default';
  checkWinner();
}

function aiTurn() {
  const emptyIndices = gameState
    .map((val, idx) => val === '' ? idx : null)
    .filter(val => val !== null);

  if (emptyIndices.length === 0 || !gameActive) return;

  // Random AI move
  const randomIndex = emptyIndices[Math.floor(Math.random() * emptyIndices.length)];
  makeMove(randomIndex, aiPlayer);
  if (gameActive) statusText.textContent = "Your turn (X)";
}

function checkWinner() {
  for (let condition of winConditions) {
    const [a, b, c] = condition;
    if (gameState[a] && gameState[a] === gameState[b] && gameState[a] === gameState[c]) {
      gameActive = false;
      const winner = gameState[a] === humanPlayer ? "ðŸŽ‰ You win!" : "ðŸ˜” AI wins!";
      statusText.textContent = winner;
      highlightWinner(condition);
      return;
    }
  }

  if (!gameState.includes('')) {
    statusText.textContent = "It's a draw!";
    gameActive = false;
  } else {
    if (gameState.filter(x => x).length % 2 === 0) {
      statusText.textContent = "Your turn (X)";
    } else {
      statusText.textContent = "AI thinking...";
    }
  }
}

function highlightWinner(winningCells) {
  winningCells.forEach(index => {
    cells[index].style.backgroundColor = '#aed581';
    cells[index].style.color = '#33691e';
  });
}

// Reset
resetBtn.addEventListener('click', () => {
  gameState = ['', '', '', '', '', '', '', '', ''];
  gameActive = true;
  cells.forEach(cell => {
    cell.textContent = '';
    cell.style.backgroundColor = '#e3f2fd';
    cell.style.color = '#1976d2';
    cell.style.cursor = 'pointer';
  });
  statusText.textContent = "Your turn (X)";
});
